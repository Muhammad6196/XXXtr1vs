-- This file was generated using Luraph Obfuscator v13.5.4

return(function(x8,N8,H8,IA,W8,A8,T8,p8,R8,q8,Q8,D8,y8,G8,V8,u8,S8,t8,J8,m8,z8,k8,a8,b8,f8,v8,P8,X8,n8,o8,s8,d8,l8,r8,K8,e8,Y8,C8,Z8,i8,F8,c8,w8,...)local M,MA,s,g=select,0X0,nil,(nil);while MA<=1 do if MA~=0 then do g=J8;end;MA=0X0002;else sdo MA=0X1;end;end;end;local j,U=tostring,H8;do MA=2;end;local h,H,u=nil,nil,(nil);repeat if not(MA<=0)then if MA==1 then do H=u8;end;MA=0;else do h=p8;end;MA=1;end;else u=table.insert;MA=3;end;until MA>=3;local x,K,L,T,e,J,B=rawget,next,nil,nil,nil,nil,nil;for hv=0X00,5 do if hv<=0X002 then if not(hv<=0X0000)then if hv==1 then T=x8;else e=coroutine.wrap;end;else L=T8;end;else do if hv<=3 then J=V8;else if hv==0X04 then B=K8;else end;end;end;end;end;local A=2147483648;local k,O=getfenv,e8;local I=(assert);local Y=(k and k()or F8);do MA=6;end;local l,R,d,r,f=nil,nil,nil,nil,(nil);do repeat if MA<=0X2 then if not(MA<=0X0)then do if MA~=0X00001 then d=0X2^k8;MA=4;else l=1;MA=3;end;end;else f=A-1;MA=7;end;else if not(MA<=0X4)then if MA~=5 then MA=1;else do s=H(U(s,5),"..",function(LB)if L(LB,2)==b8 then local CR=(0);while true do if CR~=0 then return q8;else do R=B(U(LB,1,1));end;do CR=0X1;end;end;end;else local bn,Wn=1,nil;while bn<0X2 do if bn==0X0 then do if not(R)then return Wn;else local H5,n5=0X2,nil;do while 0.6885129067687636 do if not(H5<=0)then if H5~=1 then n5=J(Wn,R);H5=0x00001;else R=nil;do H5=0;end;end;else return n5;end;end;end;end;end;bn=0x2;else Wn=h(B(LB,0X10));bn=0;end;end;end;end);end;MA=2;end;else if MA==3 then MA=5;else r=function()local hD,uD=0X0001,nil;do repeat if hD<=0 then do l=l+0x01;end;do hD=2;end;else do if hD==0x1 then uD=L(s,l,l);hD=0;else do return uD;end;end;end;end;until false;end;end;MA=0;end;end;end;until MA==7;end;do MA=0;end;local c,i,m=nil,nil,nil;while MA<0X3 do if not(MA<=0)then if MA~=1 then i=4294967296;MA=1;else m={2,1,0X3};MA=3;end;else c=function()local cR=(0X0);local jR,AR,VR,FR=nil,nil,nil,(nil);do repeat do if not(cR<=0)then if cR==0x1 then l=l+4;cR=2;else return FR*0X01000000+VR*0x10000+AR*256+jR;end;else do jR,AR,VR,FR=L(s,l,l+3);end;cR=0X001;end;end;until false;end;end;MA=0x2;end;end;local W=(i-0X1);local N=(function()local iQ,GQ=c(),(c());for VN=0x00,0X00001 do do if VN==0 then if GQ>=A then do GQ=GQ-i;end;end;else return GQ*i+iQ;end;end;end;end);local v={[0X0]=1};do local WH=(nil);for Yx=0X0,1 do if Yx~=0 then for zr=1,31 do(v)[zr]=WH;WH=WH*0x2;end;else do WH=2;end;end;end;end;local D=(function(US,kS,OS)local sS,AS=(US/v[kS])%v[OS],0X00001;while true do if AS~=0 then sS=sS-sS%0x00001;AS=0x0;else return sS;end;end;end);MA=0X0;local p,z,Q,b,P=nil,nil,nil,nil,(nil);while MA<5 do if not(MA<=1)then if MA<=2 then do P={[0x0]={[0]=s8,0x1,2,0x3,0x4,0X5,0x6,0x7,0X08,9,0XA,11,0xC,A8,0X00e,15},{[0X0]=0X001,0x0,0X0003,R8,5,i8,7,0X6,9,0X8,0X000b,0Xa,0Xd,12,15,d8},{[0]=2,0X03,0,1,6,7,0x4,5,10,11,8,9,14,0X0000f,12,13},{[0]=0X3,0X2,1,s8,0X7,0x6,0x5,0X0004,0Xb,10,0X9,0x8,15,0x0e,13,0xc},{[0X0]=0X04,0x5,0X6,7,0,1,0x2,0X3,12,13,0X0E,0X0f,W8,0X9,10,0xb},{[0]=0X5,0X4,7,6,0x1,0,3,2,13,0X00C,15,14,9,0X8,0Xb,10},{[s8]=f8,0x7,0X0004,0x05,0X2,3,0,1,0Xe,0x0f,12,0Xd,v8,11,0X8,9},{[0]=7,0X006,n8,4,0X03,0X0002,1,0,15,14,A8,D8,0XB,10,0x9,8},{[s8]=8,9,0xa,0XB,12,13,0XE,0XF,0X00000,1,2,0X0003,0X0004,0X5,6,0X7},{[0X0]=N8,0x8,0XB,v8,13,0XC,0X0000f,0Xe,1,0X00,3,2,0X5,4,7,0X6},{[0]=10,0X0000B,W8,9,14,15,D8,13,0X00002,3,s8,0X00001,6,7,i8,5},{[0]=11,0X0A,N8,0X0008,Q8,0XE,13,0XC,0X3,0X2,0X1,0x0000,0X07,0X6,0X5,0x00004},{[s8]=12,0XD,14,Q8,W8,9,v8,11,4,0X005,0X006,0X7,0,0X1,2,0X3},{[0]=13,12,0Xf,14,0X009,0X8,11,10,0x5,4,0x0007,6,0X1,0,3,2},{[0]=0Xe,0XF,D8,0xd,0X000A,11,0X00008,0X9,6,0x7,4,0X0005,0x00002,3,0,0X01},{[0X0]=Q8,14,0Xd,12,0Xb,v8,0X0009,8,0X0007,0x06,5,4,3,0X2,0X0001,0}};end;do MA=0X005;end;else if MA~=3 then b=r8 or c8;do MA=2;end;else do Q=function()local Ox,Bx,Vx,Yx=nil,nil,nil,nil;do for Oy=0X0,4 do if Oy<=0x00001 then do if Oy~=0X0000 then Bx=c();else do Ox=c();end;end;end;else if Oy<=0X2 then if not(Ox==0X00000 and Bx==0)then else return 0X0;end;else if Oy==3 then Vx=(-1)^D(Bx,0X0001f,1);else Yx=0X01;end;end;end;end;end;local dx=D(Bx,l8,11);local Mx=(D(Bx,0X00,20)*i+Ox);local Px=0x0;while true do if Px~=0X0 then return Vx*(R8^(dx-0x3ff))*(Mx/d+Yx);else if dx==s8 then if Mx~=0 then dx=0x0001;Yx=0X0;else return Vx*0x0;end;else if dx==2047 then if Mx==0 then return Vx*(0X0/0);else return Vx*(0X0001/s8);end;end;end;Px=0X001;end;end;end;end;do MA=4;end;end;end;else do if MA==0 then p=string.match;MA=1;else do z=(Y8 or bit32);end;MA=3;end;end;end;end;local t=z and z[P8]or function(Nz,Qz)Nz=Nz%i;do Qz=Qz%i;end;local Bz,lz,zz=1,0,nil;do repeat if lz<=0X0 then zz=0;lz=1;else if lz==1 then do while Nz>s8 and Qz>0X0 do local sS,BS,CS=2,nil,(nil);while sS<=0x0005 do do if not(sS<=2)then do if sS<=0X3 then do Nz=(Nz-BS)/0x10;end;do sS=4;end;else do if sS==4 then Qz=(Qz-CS)/z8;do sS=0X5;end;else Bz=Bz*16;sS=0x00006;end;end;end;end;else if not(sS<=0)then if sS==0X1 then zz=zz+P[BS][CS]*Bz;sS=0x3;else do BS=Nz%0X10;end;sS=0X0;end;else CS=Qz%0X10;sS=1;end;end;end;end;end;end;lz=0X2;else return zz+Nz*Bz+Qz*Bz;end;end;until false;end;end;local g8=function(...)return M("#",...),{...};end;local w=z and z[t8]or function(Pm,Gm)do Pm=Pm%i;end;local wm=(0);do repeat do if wm~=0 then return((Pm+Gm)-t(Pm,Gm))/0x2;else Gm=Gm%i;wm=0X1;end;end;until false;end;end;local a=(z and z.bor or function(SG,KG)SG=SG%i;KG=KG%i;return W-w(W-SG,W-KG);end);local o,Z,X=z and z.bnot or function(py)return W-(py%i);end,z and z.lshift,z and z.rshift;local y,C,G=nil,nil,nil;do for yW=0,0X4 do if not(yW<=0x1)then do if yW<=2 then y=function()local II=0X0;local MI=0X0;while true do local ec=L(s,l,l);l=l+1;II=a(II,Z(w(ec,127),MI));if w(ec,128)~=0X0 then else return II;end;MI=MI+7;end;end;else if yW~=3 then G=function()local n6=y();local p6=(0x00000);while(true)do do if p6==0X0 then if n6>f then return n6-i;end;p6=1;else do return n6;end;end;end;end;end;else C={[0X007]=7,[0x5]=0X5,[1]=5,[0x00009]=3,[2]=0X7,[6]=2,[0X7]=0x000,[3]=4,[0X5]=0x0};end;end;end;else if yW==0X0 then Z=Z or function(r9,i9)local Z9=1;repeat do if Z9<=0X0 then if not(i9<0)then else return X(r9,-i9);end;do Z9=0X0002;end;else do if Z9~=0X00001 then do return(r9*v[i9])%i;end;else if i9>=0X000020 then do return 0X00000;end;end;Z9=0;end;end;end;end;until false;end;else do X=X or function(om,rm)if not(rm>=32)then else return 0X0000;end;if not(rm<0X0)then else do return Z(om,-rm);end;end;local Wm=((om%i/v[rm]));return Wm-Wm%0x01;end;end;end;end;end;end;local S=(r());local V=(rawset);local I8=(r());MA=0;local M8,B8=nil,(nil);while MA<2 do if MA==0 then M8=function(jw)local sw=({L(s,l,l+0X3)});local uw=(t(sw[0X001],I8));local Uw,Qw,Jw,Yw=2,nil,nil,nil;repeat if not(Uw<=0x2)then if Uw<=0X003 then Jw=t(sw[0X03],I8);Uw=4;else if Uw==0X4 then do Yw=t(sw[0X4],I8);end;Uw=0;else return Yw*0x1000000+Jw*65536+Qw*256+uw;end;end;else do if not(Uw<=0X000)then if Uw==0X001 then do l=l+4;end;Uw=5;else do Qw=t(sw[0x002],I8);end;do Uw=0X3;end;end;else I8=(0xBd*I8+jw)%256;Uw=1;end;end;end;until false;end;MA=0x0001;else B8=function(DD)local OD=c();local pD="";for xs=1,OD,0x1f3d do local Js=(xs+0X1F3D-0X0001);if Js>OD then Js=OD;end;local ys=({L(s,l+xs-1,l+Js-0X01)});local rs=(0X0);do while-0x0000572888Bf do if rs~=0X00000 then pD=pD..h(b(ys));break;else for b0=1,#ys do(ys)[b0]=t(ys[b0],S);do S=(DD*S+73)%w8;end;end;do rs=0x1;end;end;end;end;end;for MP=0,1 do do if MP~=0 then do return pD;end;else do l=l+OD;end;end;end;end;end;MA=2;end;end;local O8=({});local E,q=error,(a8);local F,E8,j8=nil,nil,(nil);for rJ=0,0x0003 do if not(rJ<=0X1)then if rJ~=2 then else j8=0X001;end;else do if rJ==0 then do F=o8;end;else do E8={};end;end;end;end;end;local function U8(fH,tH,PH)local EH,rH,FH,vH=fH[4],fH[0X008],fH[3],(fH[0X7]);local yH,RH=fH[6],(fH[1]);local QH=(fH[0X9]);local jH=(T({},{__mode="v"}));local BH,xH=fH[0X2],(nil);xH=function(...)local nR,rR=0x001,0X0;local uR=((k and k()or _ENV));local RR,iR=g8(...);local zR=(uR==Y and tH or uR);local kR={};do RR=RR-0X00001;end;for P5=0,RR do if EH>P5 then do(kR)[P5]=iR[P5+1];end;else break;end;end;E8[0x00001]=fH;E8[0X02]=kR;if not vH then iR=nil;else if not(QH)then else kR[EH]={n=RR>=EH and RR-EH+0X1 or 0,b(iR,EH+0X00001,RR+0X001)};end;end;if zR==uR then elseif not(q)then _ENV=zR;else(q)(xH,zR);end;local yR,BR,QR,SR=g(function()repeat local gp=yH[nR];local Xp=(gp[6]);nR=nR+0X1;if not(Xp>=0X00002e)then if Xp<23 then if not(Xp<11)then do if not(Xp<17)then if not(Xp>=20)then if Xp<0X00012 then do kR[gp[0X1]]=kR[gp[0X003]]==kR[gp[2]];end;else if Xp==19 then local jp=gp[1];kR[jp](b(kR,jp+0X1,rR));do rR=jp-1;end;else local MK=(PH[gp[0X3]]);MK[0X0001][MK[2]]=kR[gp[1]];end;end;else if not(Xp<0X15)then if Xp~=0x016 then if not(kR[gp[3]]<=gp[0X0007])then nR=gp[0X01];end;else(kR)[gp[0x00001]]=kR[gp[3]]<=kR[gp[0X2]];end;else do kR[gp[1]]=a(kR[gp[3]],kR[gp[2]]);end;end;end;elseif not(Xp<14)then if Xp>=15 then if Xp~=16 then local cD=gp[1];local mD,rD,MD=kR[cD]();if not(mD)then else do(kR)[cD+0X1]=rD;end;do kR[cD+0X2]=MD;end;do nR=gp[3];end;end;else kR[gp[0x1]]={b({},1,gp[0x003])};end;else local nn=kR[gp[3]]/kR[gp[0X2]];do kR[gp[0X0001]]=nn-nn%0x1;end;end;else if not(Xp<12)then if Xp~=13 then if gp[2]==0XB1 then nR=nR-0x1;yH[nR]={[1]=(gp[1]-184),[0X06]=45,[3]=(gp[0x003]-184)};elseif gp[0x2]==236 then nR=nR-0X1;(yH)[nR]={[0x001]=(gp[0x1]-0X78),[3]=(gp[3]-120),[6]=0X000045};else repeat local It,it=jH,kR;if not(#It>0X0)then else local Dm={};for ea,Ra in K,It do do for P_,f_ in K,Ra do if f_[1]==it and f_[0X2]>=0X0 then local pL=f_[0X2];if not Dm[pL]then(Dm)[pL]={it[pL]};end;do(f_)[1]=Dm[pL];end;do(f_)[2]=0x1;end;end;end;end;end;end;until true;local ZL=gp[0X0001];return false,ZL,ZL;end;else kR[gp[0x00001]]=kR[gp[0X3]]-kR[gp[0X2]];end;else if not(kR[gp[0x03]]<kR[gp[0X002]])then do nR=gp[0X1];end;end;end;end;end;else if Xp<0x5 then do if not(Xp<2)then if Xp>=0X3 then if Xp~=0X04 then if kR[gp[0x3]]~=kR[gp[0X2]]then else nR=gp[0X0001];end;else do rR=gp[0x1];end;(kR[rR])();rR=rR-0x1;end;else do(kR)[gp[0X1]]=gp[0x04];end;end;else do if Xp~=1 then kR[gp[1]]=kR[gp[3]]>=kR[gp[2]];else local il=(gp[1]);local Pl,Kl=kR[il]();if Pl then(kR)[il+0x001]=Kl;nR=gp[3];end;end;end;end;end;else do if not(Xp<0X8)then do if Xp>=0X9 then if Xp==0X0000A then repeat local vX,VX,kX=jH,kR,gp[1];if not(#vX>0X00)then else local jn={};for cY,nY in K,vX do do for QL,jL in K,nY do if jL[1]==VX and jL[0X002]>=kX then local cs=(jL[2]);if not jn[cs]then jn[cs]={VX[cs]};end;jL[1]=jn[cs];(jL)[0X2]=1;end;end;end;end;end;until'\079\125*\039';else if not(kR[gp[0X3]]<=kR[gp[0X00002]])then else nR=gp[0x00001];end;end;else local Ly=(gp[0X1]);local Dy=(gp[0x003]);rR=Ly+Dy-1;repeat local A7,a7=jH,kR;if#A7>0 then local ke=({});do for YH,NH in K,A7 do for jD,AD in K,NH do do if not(AD[0X1]==a7 and AD[2]>=0X000)then else local Qj=AD[2];if not ke[Qj]then(ke)[Qj]={a7[Qj]};end;(AD)[0x1]=ke[Qj];AD[0X2]=1;end;end;end;end;end;end;until'\097\074O';do return true,Ly,Dy;end;end;end;else if not(Xp>=0x006)then local LK=gp[1];local xK=e(function(...)F();for Yd,ed in...do F(true,Yd,ed);end;end);(xK)(kR[LK],kR[LK+0X1],kR[LK+0X0002]);rR=LK;(kR)[LK]=xK;nR=gp[0x3];else do if Xp~=0X07 then local Zr=gp[0X1];kR[Zr](kR[Zr+0X0001]);do rR=Zr-1;end;else local LQ=gp[1];local xQ,BQ=kR[LQ]();do if xQ then for wi=1,gp[2]do kR[LQ+wi]=BQ[wi];end;do nR=gp[0X0003];end;end;end;end;end;end;end;end;end;end;else if Xp<0X22 then if Xp>=28 then if not(Xp<0X01f)then do if not(Xp>=32)then kR[gp[0X01]][gp[0X4]]=gp[0X7];else if Xp~=33 then if not(kR[gp[3]]<=kR[gp[0x2]])then nR=gp[1];end;else for zy=gp[1],gp[0x3]do(kR)[zy]=nil;end;end;end;end;else if Xp>=29 then if Xp~=30 then repeat local S9,X9=jH,kR;if#S9>0X0000 then local MO={};for T4,j4 in K,S9 do for HX,rX in K,j4 do if rX[0X1]==X9 and rX[0x02]>=0 then local sX=(rX[2]);do if not(not MO[sX])then else do(MO)[sX]={X9[sX]};end;end;end;(rX)[1]=MO[sX];do(rX)[0x2]=1;end;end;end;end;end;until true;return;else if gp[0X2]==183 then nR=nR-0X1;(yH)[nR]={[6]=0X1d,[3]=(gp[3]-0X000012),[0X0001]=(gp[0x1]-0X12)};else local gS=(gp[0x1]);local HS=(RR-EH);if HS<0X0 then HS=-0x0001;end;do for jm=gS,gS+HS do(kR)[jm]=iR[EH+(jm-gS)+1];end;end;rR=gS+HS;end;end;else(E8)[gp[0X003]]=kR[gp[1]];end;end;else if Xp>=25 then if Xp<0X1a then kR[gp[0x1]]=true;else do if Xp==27 then local zt=(gp[0x1]);rR=zt+gp[3]-0X1;kR[zt](b(kR,zt+0X1,rR));rR=zt-1;else(kR)[gp[1]]=-kR[gp[0X3]];end;end;end;else if Xp~=24 then if not(kR[gp[1]])then else do nR=gp[0X3];end;end;else repeat local EV,HV=jH,kR;if not(#EV>0)then else local CW=({});for tO,qO in K,EV do for U7,y7 in K,qO do if y7[1]==HV and y7[0X2]>=0x0 then local ud=(y7[0x00002]);if not(not CW[ud])then else do CW[ud]={HV[ud]};end;end;y7[1]=CW[ud];(y7)[0X0002]=0x1;end;end;end;end;until true;do return true,gp[1],1;end;end;end;end;elseif Xp>=40 then do if not(Xp<0X2B)then if not(Xp<0X2c)then if Xp==45 then(kR)[gp[0X1]]=nil;else(kR)[gp[1]]=kR[gp[3]]~=gp[7];end;else do kR[gp[0x0001]]=gp[0X4];end;end;else if Xp<0X00029 then local kW=gp[0X1];(kR)[kW]=kR[kW](kR[kW+0X1]);rR=kW;else if Xp~=42 then local vM=(gp[0X0001]);local gM=kR[vM+0X00002];local IM,UM=kR[vM],(kR[vM+1]);(kR)[vM]=e(function()for ar=IM,UM,gM do(F)(true,ar);end;end);nR=gp[0X3];else local F4=(gp[0X1]);local y4,m4=kR[F4],(gp[2]-0X1)*0X00032;for BP=1,rR-F4 do(y4)[m4+BP]=kR[F4+BP];end;end;end;end;end;else if Xp<37 then do if not(Xp>=0X23)then(kR)[gp[0X01]]=kR[gp[0X3]][kR[gp[2]]];else do if Xp==0X24 then do kR[gp[0X001]]=kR[gp[3]]/kR[gp[0X02]];end;else do(kR)[gp[1]]=kR[gp[3]]*kR[gp[0X2]];end;end;end;end;end;else if Xp<38 then(kR)[gp[0X001]]=kR[gp[3]]%gp[0X07];else do if Xp~=0X0027 then kR[gp[1]]=kR[gp[0X03]]~=kR[gp[0X00002]];else(kR)[gp[0x0001]]=kR[gp[3]]<kR[gp[2]];end;end;end;end;end;end;else do if not(Xp>=0X45)then if not(Xp<57)then if not(Xp>=0x03F)then do if not(Xp>=0X3c)then if not(Xp>=58)then(kR)[gp[0x1]]=kR[gp[3]]>kR[gp[2]];else if Xp==0X3B then do if gp[0X02]==53 then do nR=nR-1;end;do yH[nR]={[3]=(gp[3]-191),[1]=(gp[1]-0XbF),[0X6]=30};end;else(kR)[gp[0x1]]=kR[gp[0X3]];end;end;else do(kR[gp[0X1]])[kR[gp[0X3]]]=gp[7];end;end;end;else if Xp>=0X00003D then do if Xp==62 then kR[gp[1]]=kR[gp[0x003]]%kR[gp[2]];else if gp[2]==0X0bd then nR=nR-0x001;(yH)[nR]={[1]=(gp[0X1]-15),[6]=10,[0X0003]=(gp[0X03]-0XF)};else repeat local ek,Uk=jH,kR;if not(#ek>0)then else local aM=({});for y6,h6 in K,ek do for Sz,gz in K,h6 do if not(gz[0X001]==Uk and gz[0X2]>=0)then else local oZ=(gz[0X2]);if not aM[oZ]then do aM[oZ]={Uk[oZ]};end;end;gz[0X1]=aM[oZ];(gz)[2]=1;end;end;end;end;until true;local C5=(gp[1]);return false,C5,C5+gp[0x3]-2;end;end;end;else do(kR[gp[1]])[gp[4]]=kR[gp[0X2]];end;end;end;end;else do if not(Xp<0X42)then if not(Xp<0x43)then if Xp~=68 then(kR)[gp[0X1]]=t(kR[gp[0X003]],kR[gp[0X2]]);else do kR[gp[0X1]]=o(kR[gp[0X3]]);end;end;else(kR)[gp[0X1]]=gp[0X4];end;else if not(Xp<0x40)then if Xp==65 then if kR[gp[0x0003]]==gp[0X7]then nR=gp[0X1];end;else local Z9=gp[0x3];local O9=(gp[0x1]);do if Z9==0X0 then else rR=O9+Z9-1;end;end;local z9,J9,X9=gp[2],nil,(nil);do if Z9==1 then do J9,X9=g8(kR[O9]());end;else do J9,X9=g8(kR[O9](b(kR,O9+0X1,rR)));end;end;end;if z9==0x1 then rR=O9-1;else if z9==0X00 then J9=J9+O9-0x1;rR=J9;else J9=O9+z9-2;rR=J9+0X1;end;local SN=0X0;for d3=O9,J9 do SN=SN+1;kR[d3]=X9[SN];end;end;end;else kR[gp[1]]=Z(kR[gp[3]],kR[gp[0X002]]);end;end;end;end;else if not(Xp>=51)then if not(Xp<48)then if Xp>=49 then if Xp==50 then local UT=gp[1];(kR)[UT]=kR[UT](kR[UT+1],kR[UT+0X2]);rR=UT;else zR[gp[4]]=kR[gp[0X1]];end;else local C1=(gp[1]);local Q1,c1=kR[C1]();if not(Q1)then else nR=gp[0X3];(kR)[C1+3]=c1;end;end;else if Xp~=47 then local XU=(gp[3]);do(kR)[gp[0x1]]=kR[XU]..kR[XU+0X1];end;else repeat local xj,cj=jH,kR;if not(#xj>0)then else local cM=({});for y2,A2 in K,xj do for oi,Mi in K,A2 do do if Mi[1]==cj and Mi[0x00002]>=0X0 then local LR=(Mi[2]);if not(not cM[LR])then else cM[LR]={cj[LR]};end;(Mi)[0X00001]=cM[LR];Mi[0X002]=1;end;end;end;end;end;until true;return true,gp[1],0X0;end;end;else if Xp<0x36 then if Xp<0X34 then if not(not kR[gp[1]])then else do nR=gp[0X3];end;end;else do if Xp~=53 then local eG=gp[1];local LG=(gp[0X2]-0X1)*0x32;local OG=(kR[eG]);for ct=1,gp[0X3]do(OG)[LG+ct]=kR[eG+ct];end;else(kR)[gp[1]]=false;end;end;end;else if not(Xp<55)then if Xp~=0X38 then(kR)[gp[1]]=kR[gp[0x3]]^kR[gp[0X00002]];else do if gp[0X002]==0X0000e5 then nR=nR-1;yH[nR]={[1]=(gp[0X0001]-0X84),[0X06]=73,[0X03]=(gp[0X0003]-132)};else(kR)[gp[0X1]]=iR[EH+1];end;end;end;else do nR=gp[0x003];end;end;end;end;end;elseif not(Xp>=81)then do if not(Xp<0x4b)then if not(Xp<78)then if Xp<79 then(kR)[gp[0x01]]=w(kR[gp[3]],kR[gp[2]]);else if Xp==0X50 then local x7,z7=gp[1],(kR[gp[3]]);kR[x7+1]=z7;do kR[x7]=z7[gp[0X7]];end;else local Tl=gp[3];local dl=(kR[Tl]);for WX=Tl+0X001,gp[0X2]do dl=dl..kR[WX];end;kR[gp[0X00001]]=dl;end;end;else do if Xp>=0X4C then if Xp~=0X4D then kR[gp[1]][kR[gp[0X3]]]=kR[gp[0X02]];else kR[gp[0X00001]]=E8[gp[3]];end;else do(kR)[gp[1]]=kR[gp[3]]+kR[gp[0X2]];end;end;end;end;else do if not(Xp<72)then if not(Xp<73)then if Xp==0X4a then if kR[gp[3]]~=kR[gp[0X2]]then nR=gp[0x0001];end;else repeat local Ni,Si=jH,kR;do if not(#Ni>0)then else local Kf={};for iA,jA in K,Ni do do for mv,Mv in K,jA do if not(Mv[1]==Si and Mv[0x02]>=0)then else local LH=(Mv[0x2]);do if not(not Kf[LH])then else(Kf)[LH]={Si[LH]};end;end;Mv[0X1]=Kf[LH];(Mv)[0X2]=1;end;end;end;end;end;end;until true;return false,gp[0X01],rR;end;else if not(kR[gp[0X003]]<kR[gp[2]])then else nR=gp[1];end;end;else do if not(Xp>=0X00046)then do if gp[0X2]==0X000eA then do nR=nR-1;end;(yH)[nR]={[3]=(gp[0X3]-99),[0X6]=0x1E,[0X1]=(gp[0X1]-99)};elseif gp[2]==0X00F4 then nR=nR-1;do(yH)[nR]={[0X001]=(gp[0X1]-0X06D),[3]=(gp[0x3]-0X006d),[6]=0X49};end;else(kR)[gp[0x1]]=#kR[gp[0X00003]];end;end;else do if Xp~=0x47 then local ci=(gp[1]);local vi=(e(function(...)F();do for OW,bW,NW,JW,yW,YW,dW,aW,uW,tW in...do F(true,{OW,bW,NW,JW,yW,YW,dW,aW,uW,tW});end;end;end));vi(kR[ci],kR[ci+0x0001],kR[ci+0X2]);rR=ci;kR[ci]=vi;do nR=gp[3];end;else local HM=gp[1];(kR)[HM]=kR[HM](b(kR,HM+0X1,rR));rR=HM;end;end;end;end;end;end;end;end;else do if Xp>=0X000057 then if Xp>=90 then if Xp>=91 then if Xp~=92 then(kR)[gp[0x1]]=not kR[gp[0x003]];else if gp[0X2]~=89 then local cU=gp[0X01];do for Eo=cU,cU+(gp[3]-1)do(kR)[Eo]=iR[EH+(Eo-cU)+0X1];end;end;else nR=nR-1;yH[nR]={[0X01]=(gp[1]-0X68),[0x6]=0X003D,[0X0003]=(gp[0X3]-104)};end;end;else local lh=(gp[0X00001]);local Eh=(e(function(...)(F)();for If in...do(F)(true,If);end;end));Eh(kR[lh],kR[lh+1],kR[lh+0X02]);rR=lh;kR[lh]=Eh;nR=gp[3];end;else if not(Xp<88)then if Xp==0X0059 then rR=gp[0X0001];do(kR)[rR]=kR[rR]();end;else local un=gp[1];kR[un](kR[un+1],kR[un+0x00002]);rR=un-1;end;else if kR[gp[0x3]]~=gp[7]then nR=gp[0x001];end;end;end;else do if Xp<84 then if Xp>=0X52 then if Xp==0X53 then(kR)[gp[0X1]]={};else(kR)[gp[1]]=zR[gp[4]];end;else local io=(PH[gp[0X3]]);kR[gp[0X1]]=io[1][io[2]];end;else if Xp>=85 then if Xp==0X00056 then(kR)[gp[1]]=kR[gp[0x3]][gp[7]];else local GH=(RH[gp[0x00003]]);local AH=nil;local TH=(GH[5]);local SH=#TH;do if not(SH>0X0000)then else AH={};for Ro=0X01,SH do local Eo=TH[Ro];if Eo[0X1]~=0 then(AH)[Ro-1]=PH[Eo[2]];else(AH)[Ro-0x0001]={kR,Eo[0x002]};end;end;(u)(jH,AH);end;end;(kR)[gp[0X001]]=U8(GH,zR,AH);end;else kR[gp[0x1]]=X(kR[gp[0X3]],kR[gp[0X2]]);end;end;end;end;end;end;end;end;until false;end);if not(yR)then do if O(BR)~="stri\110g"then E(BR,0);else do if p(BR,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;end;if not(p(BR,'\094.\045\058\037d+: '))then E(BR,0);else(E)("L\117rap\104\032Sc\114\105pt\058"..(FH[nR-0X01]or"(internal)")..'\058 '..j(BR),0X00);end;end;end;elseif BR then do if SR~=0X001 then return kR[QR](b(kR,QR+0x1,rR));else return kR[QR]();end;end;else if not(QR)then else do return b(kR,QR,SR);end;end;end;end;if q then(q)(xH,tH);end;return xH;end;local function L8()local lm,bm,rm,Om,Em,Bm,Ym,Xm,Jm=8,nil,nil,nil,nil,nil,nil,nil,nil;do repeat do if not(lm<=0X4)then if lm<=0X07 then if not(lm<=0X5)then if lm~=6 then Bm=r();lm=3;else rm=0X01;lm=1;end;else Xm={{},nil,{},Z8,Z8,{},Z8,Z8,Z8};lm=0X0004;end;elseif not(lm<=8)then do if lm==0X009 then for Sd=1,Em do local dd=r();local nd,pd=nil,(nil);local bd=0X1;do while bd~=5 do do if not(bd<=0X0001)then if bd<=0x2 then pd={nd,{}};bd=4;else if bd~=3 then do(Om)[rm]=pd;end;bd=0X05;else if dd==X8 then nd=c();elseif dd==0X0000E8 then nd=c();elseif dd==m8 then nd=U(B8(Bm),i8);elseif dd==0Xb8 then nd=U(B8(Bm),Q()+c());elseif dd==196 then nd=U(B8(Bm),Q()+c());elseif dd==0x0000C5 then nd=Q();elseif dd==219 then do nd=true;end;elseif dd==C8 then do nd=y8;end;elseif dd==0X3F then nd=N();elseif dd==18 then nd=c();elseif dd==0X68 then do nd=Q()+c();end;end;bd=2;end;end;else if bd~=0X0 then nd=nil;bd=0;else(bm)[Sd-0X1]=rm;bd=3;end;end;end;end;end;bd=0;do repeat if bd~=0 then if not(Jm)then else local jL=0X00001;while jL~=0X2 do do if jL==0x0 then do j8=j8+0X0001;end;jL=2;else do(O8)[j8]=pd;end;do jL=0X0;end;end;end;end;end;do bd=0X2;end;else rm=rm+1;do bd=0X1;end;end;until bd>1;end;end;do lm=0;end;else bm={};do lm=6;end;end;end;else lm=0xa;end;else do if lm<=0X1 then do if lm~=0x0 then Om={};do lm=2;end;else(Xm)[15]=r();do break;end;end;end;else do if lm<=2 then Em=c()-42433;lm=7;elseif lm==0X3 then Ym={};do lm=5;end;else Jm=r()~=0X0;lm=0X9;end;end;end;end;end;end;until false;end;lm=0X00004;while lm~=8 do if not(lm<=0X3)then do if not(lm<=5)then if lm==0x006 then Xm[0Xb]=c();do lm=0x1;end;else Xm[0X0013]=c();lm=0;end;else if lm~=4 then Xm[D8]=r();lm=2;else Xm[18]=c();do lm=0X00006;end;end;end;end;else if not(lm<=1)then do if lm~=0X002 then(Xm)[4]=y();lm=7;else(Xm)[19]=r();lm=8;end;end;else if lm==0 then Xm[0xe]=c();lm=5;else Xm[0X008]=y();do lm=3;end;end;end;end;end;local Gm=c()-G8;local em=Xm[1];for DN=0,Gm-S8 do em[DN]=L8();end;lm=0X0002;while-0X00004c0e0FfC do do if lm<=0X00002 then if lm<=0 then for Wb=1,y()do Ym[Wb]={r(),y()};end;do lm=0X3;end;else do if lm~=0X1 then do(Xm)[0X0005]=Ym;end;lm=0;else do Xm[13]=r();end;lm=0X5;end;end;end;else do if not(lm<=3)then if lm==4 then Xm[0Xc]=c();do lm=1;end;else do Xm[10]=r();end;break;end;else Xm[0XF]=c();do lm=0x00004;end;end;end;end;end;end;local Rm=(Xm[6]);local om=(nil);for fY=0x0,1 do if fY~=0 then for DY=0X001,om do(Rm)[DY]={[S8]=G(),[5]=r(),[0X3]=G(),[0X06]=y(),[0X4]=r(),[7]=r(),[2]=G()};end;else om=c()-0x001Fd8;end;end;lm=0X0;local km,Wm=nil,(nil);while 0.6266141577285043 do do if not(lm<=0X2)then if not(lm<=3)then do if lm~=4 then do km=r();end;lm=0X1;else for a2=1,om do local d2,S2=1,nil;while d2<2 do do if d2~=0X0 then S2=Xm[6][a2];d2=0;else do for kH,SH in ipairs(m)do local lH,ZH,nH=0X001,nil,(nil);repeat if lH<=0 then nH=S2[ZH];lH=2;else if lH~=1 then if nH==15 then local ge,Ne=nil,(nil);do for Nl=0,0X2 do if Nl<=0 then ge=bm[S2[SH]];else do if Nl==0x1 then do Ne=Om[ge];end;else do if not(Ne)then else(S2)[ZH]=Ne[1];local JI=(0x1);local xI=nil;while JI~=2 do if JI==0 then xI[#xI+1]={S2,ZH};JI=2;else xI=Ne[2];do JI=0;end;end;end;end;end;end;end;end;end;end;elseif nH~=0X2 then else(S2)[SH]=a2+S2[SH]+1;end;lH=3;else ZH=C[SH];lH=0;end;end;until lH>2;end;end;do d2=2;end;end;end;end;end;lm=5;end;end;else(Xm)[0X9]=D(km,2,1)~=0;lm=2;end;else do if lm<=0x0 then Xm[0X2]=y();do lm=0X4;end;else if lm==1 then(Xm)[IA]=D(km,1,1)~=0;lm=0X00003;else Wm=c();break;end;end;end;end;end;end;do for WO=0x00,0x001 do if WO==0 then do for bV=1,Wm do local fV,AV,gV,aV=0X2,nil,nil,(nil);while-0X000071217a26 do if not(fV<=1)then if fV~=2 then for HM=AV,gV do(Xm[3])[HM]=aV;end;break;else do AV=c();end;fV=0X01;end;elseif fV~=0X00 then gV=c();fV=0X0;else aV=c();do fV=3;end;end;end;end;end;else return Xm;end;end;end;end;MA=0X1;local h8=nil;do while 0.417184851560222 do if not(MA<=1)then if MA~=0X2 then do(E8)[4]=O8;end;MA=0;else return U8(h8,Y,Z8)(...);end;else do if MA==0X0 then O8=nil;MA=0X002;else h8=L8();MA=3;end;end;end;end;end;end)(setmetatable,0X9,string.sub,0X7,8,13,string.byte,string.char,0X2,"",15,12,false,0X17E70,string.rep,string.gsub,0X0001,"\098\097nd",pcall,0x0060,16,52,setfenv,72,6,0xa,"b\120\111\114",0X006f,5,coroutine.yield,0X00000,0x00E,20,unpack,tonumber,type,bit,126,nil,4,_ENV,table.unpack,256,...);
