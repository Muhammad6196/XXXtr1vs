-- This file was generated using Luraph Obfuscator v13.5.4

return(function(ug,Wg,hg,Ag,fg,Og,Ug,mg,Vg,og,Xg,cg,bg,wg,pg,Dg,vg,Rg,Hg,Gg,yg,jg,Ig,eg,nZ,Tg,Bg,ag,Sg,Pg,gg,zg,dg,ig,Ng,Cg,qg,rg,kg,xg,Eg,Lg,tg,...)local Y,Q,JZ,l,K=select,pcall,0,nil,(nil);while 0.1350786411708872 do do if JZ==0x00000 then l=xg;do JZ=0x00001;end;else do K=eg.sub;end;break;end;end;end;local M=tonumber;JZ=0;local S,e,p=nil,nil,nil;while JZ<=2 do if not(JZ<=0)then if JZ~=0X1 then p=ag;JZ=0X3;else e=qg;JZ=0x00002;end;else S=Sg;JZ=0x1;end;end;do JZ=0;end;local q,j=nil,nil;do while JZ~=2 do if JZ==0X0 then q=string.match;do JZ=1;end;else j=jg;JZ=2;end;end;end;local b=Cg;do JZ=0X001;end;local H,g,s,x=nil,nil,nil,nil;while"\094"do if not(JZ<=0X1)then if not(JZ<=0X2)then if JZ==0X03 then s=string.byte;JZ=0X2;else do g=wg or Hg;end;JZ=0;end;else x=Wg;break;end;elseif JZ~=0X00 then H=bg;JZ=0X004;else JZ=3;end;end;local X=((p and p()or gg));local o,V=nil,nil;for CB=0,1 do if CB~=0 then V=0X1;else o=0x100000000;end;end;local a,P,h,Qg,c,G,R,A,T,Z,t,B,F,U,Zg,d,I,f,z=tgo-1,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil;for OQ=0x0,17 do do if not(OQ<=0X00008)then if OQ<=12 then if not(OQ<=0xA)then if OQ==0xb then do U={[0x000]=1};end;else Zg=0x001;end;elseif OQ==9 then B=function()local mF,BF,JF,gF,lF=2,nil,nil,nil,nil;while(true)do if not(mF<=0)then if mF~=1 then BF,JF,gF,lF=s(P,V,V+3);mF=0;else return lF*Gg+gF*65536+JF*0X100+BF;end;else V=V+0x4;do mF=0X1;end;end;end;end;else F=Bg;end;else if not(OQ<=0Xe)then if not(OQ<=15)then if OQ==16 then f={[0X0000]={[0]=0x0,0x00001,0X2,3,Rg,0X5,6,7,8,og,10,11,12,0Xd,14,15},{[0X0]=1,0,3,0X2,5,4,0x00007,0X6,9,0X8,0xb,0X0000a,Tg,hg,15,14},{[0]=2,0X3,0X0,1,6,7,4,5,0xa,0X0B,8,0X0009,0xE,0Xf,hg,13},{[0]=3,Ag,0X00001,0,7,0X006,0X5,0X4,0Xb,0xA,og,Ug,15,0X0e,Tg,0Xc},{[0X0]=4,0X5,0x00006,7,0,0X0001,2,0X03,0xc,Tg,14,0XF,8,0X9,0x0A,0X00b},{[0]=0X5,4,0X7,0x0006,0x01,0,3,0x2,0X00D,0x00c,0Xf,dg,9,0x008,0X000b,10},{[0]=0X6,0X7,0x0004,0X5,2,3,0,0X1,14,15,0Xc,0xd,10,Ig,8,0X0009},{[0X0000]=0X00007,6,5,0X004,0X0003,0X0002,Xg,0X0000,0Xf,0xe,0x0D,0Xc,0XB,zg,og,8},{[0x0]=Ug,9,10,Ig,12,13,0xE,0X000f,0X0,Xg,Ag,0x3,0X4,0X0005,6,0X0007},{[0x00]=0x9,Ug,0Xb,10,13,0XC,15,0X0E,1,0X000,fg,0X2,0X5,0X00004,0X7,6},{[0]=10,11,0X8,0X0009,0X0E,15,0X0C,Tg,0X00002,3,0X0,0x0001,0X6,0x00007,4,5},{[0]=Ig,0xa,0X00009,0X8,0XF,14,0XD,12,0X3,0x2,1,0x0,0X7,6,Lg,4},{[0]=12,13,14,kg,0X008,0x9,0Xa,11,0X4,5,0X6,0X7,0X0,1,0X2,0X3},{[0x0]=0xD,0xc,0x00f,14,0X9,0x00008,11,0Xa,0X5,0X004,7,0X0006,1,0,3,0X2},{[0]=14,15,0XC,0xD,0X000a,11,8,9,0X006,0x7,0X4,5,0x2,3,yg,1},{[0X0]=kg,14,Tg,0Xc,11,10,9,0x8,0X07,0X0006,0X5,0X4,0X3,2,0x00001,0X0}};else z=function()local Xb=B();local Gb=4;local Yb,Nb,rb,ib,eb=nil,nil,nil,nil,nil;do while'\073\097\042\126\106Y'do if Gb<=2 then do if not(Gb<=0X0)then if Gb==1 then do if Xb==0 and Yb==0X00 then return 0X0;end;end;Gb=0X3;else Nb=1;do Gb=1;end;end;else eb=d(Yb,0X0,20)*o+Xb;do break;end;end;end;else do if Gb<=0X03 then rb=(-0X0001)^d(Yb,31,1);Gb=0x5;else if Gb~=4 then ib=d(Yb,0X14,0X000b);Gb=0;else do Yb=B();end;Gb=0X2;end;end;end;end;end;end;if ib==yg then if eb~=0X00 then do ib=0X1;end;do Nb=0x00;end;else return rb*0;end;else if ib~=2047 then else do if eb==yg then do return rb*(0/0);end;else return rb*(1/0);end;end;end;end;return rb*(2^(ib-ug))*(eb/T+Nb);end;end;else do I=function()local tT,uT=nil,(nil);do for EX=0,0X2 do do if EX<=0x00000 then tT,uT=B(),B();else if EX~=0X1 then return uT*o+tT;else if uT>=R then do uT=uT-o;end;end;end;end;end;end;end;end;end;end;else if OQ~=0X000D then d=function(J4,y4,h4)local C4=0X00;local g4=(nil);while 0.6894404142300602 do if not(C4<=0X00)then if C4~=0X001 then g4=g4-g4%0x001;C4=0x01;else return g4;end;else do g4=(J4/U[y4])%U[h4];end;C4=2;end;end;end;else do local o4,S4=1,nil;repeat if o4==0 then for tf=1,31 do local Kf=(1);while Kf<=0X1 do if Kf==0 then do S4=S4*2;end;do Kf=2;end;else(U)[tf]=S4;do Kf=0x0;end;end;end;end;do o4=0X2;end;else S4=2;o4=0X0;end;until o4==2;end;end;end;end;else if not(OQ<=0x3)then if OQ<=5 then do if OQ~=4 then A=R-1;else R=2147483648;end;end;else do if OQ<=0X6 then T=0x002^0X34;else if OQ==0x7 then Z=Pg;else t=cg;end;end;end;end;elseif not(OQ<=1)then do if OQ==0X2 then do P=S(K(P,0X5),"\046.",function(Zl)if s(Zl,0X0002)~=pg then local Mf=(x(M(Zl,0X10)));if not(c)then return Mf;else local Tc=e(Mf,c);do c=Vg;end;do return Tc;end;end;else c=M(K(Zl,1,Xg));return'';end;end);end;else G=function()local Gy=nil;for Rb=0,0X1 do do if Rb==0X0 then Gy=s(P,V,V);else V=V+0X1;end;end;end;do return Gy;end;end;end;end;else if OQ==0 then Qg={};else end;end;end;end;end;local L=((bit or bit32));local k=L and L[mg]or function(A6,N6)local o6,G6=0X2,nil;do while o6~=3 do if not(o6<=0X0)then do if o6==0X1 then N6=N6%o;o6=0X3;else A6=A6%o;o6=0;end;end;else G6=0X1;o6=0X1;end;end;end;o6=0x2;local m6=nil;while 303119322 do if o6<=0X0 then do while A6>0 and N6>0x0 do local vc,Mc=nil,(nil);for pH=0,0X002 do if pH<=0 then vc=A6%16;else do if pH==1 then do Mc=N6%16;end;else m6=m6+f[vc][Mc]*G6;end;end;end;end;A6=(A6-vc)/16;N6=(N6-Mc)/0x10;G6=G6*0X010;end;end;o6=1;else do if o6==1 then return m6+A6*G6+N6*G6;else m6=0X0000;o6=0X0;end;end;end;end;end;local y=L and L[vg]or function(SX,wX)local zX=0x000;while 0.6797433038617812 do if zX<=0X0 then SX=SX%o;zX=1;else do if zX~=0X001 then do return((SX+wX)-k(SX,wX))/2;end;else wX=wX%o;zX=0X02;end;end;end;end;end;local u=L and L.bor or function(gL,CL)local hL=(0);while 0.29092751095037894 do if not(hL<=0X00)then do if hL==0X01 then CL=CL%o;hL=0x2;else return h-y(h-gL,h-CL);end;end;else gL=gL%o;hL=1;end;end;end;local v,O=nil,(nil);local m=(L and L.bnot or function(eF)return h-(eF%o);end);for MF=0x0,1 do if MF~=0X000 then O=L and L[Og];else do v=L and L.lshift;end;end;end;do v=v or function(Al,Gl)if Gl>=32 then return 0X0;end;if Gl<0 then return O(Al,-Gl);end;return(Al*U[Gl])%o;end;end;O=O or function(Kw,ew)local Fw=0X0001;local kw=(nil);while true do if not(Fw<=0X1)then if Fw==0x2 then do kw=(Kw%o/U[ew]);end;Fw=0X0000;else if ew<0 then do return v(Kw,-ew);end;end;do Fw=2;end;end;else if Fw~=0 then if ew>=0X20 then do return 0;end;end;Fw=0X03;else return kw-kw%0X1;end;end;end;end;local C,D=rawget,{[0X5]=6,[0X9]=0X7,[0X01]=5,[yg]=0X002,[8]=0X0008,[4]=1,[8]=6,[3]=6,[0X7]=3,[0]=6,[fg]=0x02,[0X2]=0X3};local i=(function()local QS,lS=0,0;repeat local Ox=s(P,V,V);V=V+1;lS=u(lS,v(y(Ox,0x007F),QS));if y(Ox,128)~=0 then else return lS;end;QS=QS+7;until false;end);local r=(G());local ng=(G());local N=(function()local IJ=(nil);for xm=0,0X02 do if xm<=0 then IJ=i();else if xm==0X00001 then if IJ>A then return IJ-o;end;else return IJ;end;end;end;end);local W=Eg;JZ=2;local Jg,Mg,E=nil,nil,nil;repeat if JZ<=0 then E={0X00004,0X7,0X5};JZ=3;else if JZ==0X1 then Mg=function(...)return Y('#',...),{...};end;do JZ=0X00000;end;else do Jg=function(JV)local pV=({s(P,V,V+3)});local YV,zV,TV,CV,jV=2,nil,nil,nil,nil;repeat if YV<=0X1 then if YV~=0 then jV=k(pV[4],ng);do YV=4;end;else CV=k(pV[3],ng);YV=0X1;end;else if YV~=0X2 then TV=k(pV[2],ng);do YV=0X0;end;else do zV=k(pV[1],ng);end;do YV=0X003;end;end;end;until YV>=4;YV=0;repeat if not(YV<=0)then if YV==0X1 then return jV*16777216+CV*65536+TV*256+zV;else do V=V+4;end;YV=1;end;else ng=(0x0091*ng+JV)%256;YV=2;end;until false;end;end;JZ=1;end;end;until JZ==0X00003;local w=(Dg);local Yg=(function(qq)local eq,Cq=nil,nil;for wD=0,0X3 do if wD<=1 then do if wD==0 then eq=B();else do Cq="";end;end;end;elseif wD==2 then for Xi=Xg,eq,7997 do local Ei,ii=nil,nil;for Vc=0,3 do if not(Vc<=0X1)then if Vc==0x2 then ii={s(P,V+Xi-1,V+Ei-1)};else for Ix=0X1,#ii do(ii)[Ix]=k(ii[Ix],r);r=(qq*r+0xa1)%256;end;end;else if Vc==0 then do Ei=Xi+0X1f3D-0x1;end;else do if not(Ei>eq)then else Ei=eq;end;end;end;end;end;Cq=Cq..x(g(ii));end;else V=V+eq;end;end;return Cq;end);JZ=5;local J,lg,Fg,Kg,sg=nil,nil,nil,nil,(nil);repeat if not(JZ<=0X3)then if JZ<=0x0005 then do if JZ~=4 then do J=ig;end;JZ=0x0006;else do(lg)[0X4]=Qg;end;JZ=7;end;end;else do if not(JZ<=6)then if JZ~=7 then JZ=0;else Qg=Vg;JZ=2;end;else lg={};JZ=0X8;end;end;end;elseif JZ<=1 then if JZ==0 then function Fg(o1,T1,w1)local P1=T1[0X06];local E1=T1[0X2];local L1,q1,O1,g1=T1[0X4],T1[0x0008],T1[1],(T1[7]);local u1=(T1[5]);local S1=j({},{__mode="v"});local Q1=(T1[0x00003]);local d1=(nil);d1=function(...)local bx=0x1;local fx=(p and p()or _ENV);local Bx={};local sx,Rx=Mg(...);local Cx=(0);sx=sx-1;for Ad=0X00,sx do if q1>Ad then(Bx)[Ad]=Rx[Ad+1];else break;end;end;lg[0X1]=T1;lg[2]=Bx;local zx=((fx==X and o1 or fx));if not E1 then Rx=nil;elseif P1 then(Bx)[q1]={n=sx>=q1 and sx-q1+1 or 0,g(Rx,q1+0X1,sx+0X01)};end;if zx==fx then else if not(t)then _ENV=zx;else(t)(d1,zx);end;end;local Px,Mx,mx,Xx=Q(function()do while true do local Sq=(u1[bx]);local Yq=Sq[0X2];bx=bx+1;if not(Yq>=43)then do if Yq<21 then do if Yq>=10 then if not(Yq<15)then if Yq<0x12 then if Yq>=16 then do if Yq~=17 then local Ch=(w1[Sq[4]]);Ch[0X1][Ch[0X2]]=Bx[Sq[0x005]];else do Bx[Sq[5]][Bx[Sq[0X4]]]=Sq[3];end;end;end;else Bx[Sq[0X5]]=Bx[Sq[4]]>=Bx[Sq[7]];end;else if not(Yq<19)then if Yq~=0x14 then local ET=Sq[5];local IT=H(function(...)W();for rL in...do(W)(true,rL);end;end);(IT)(Bx[ET],Bx[ET+1],Bx[ET+0X2]);Cx=ET;(Bx)[ET]=IT;bx=Sq[0X4];else do if Bx[Sq[4]]==Sq[0X03]then else bx=Sq[0X00005];end;end;end;else local vx=(Sq[0X00005]);local Qx,Ix=Bx[vx]();if not(Qx)then else(Bx)[vx+1]=Ix;bx=Sq[4];end;end;end;else if not(Yq<12)then if not(Yq<13)then do if Yq~=14 then local yv,Iv=Sq[0X005],(Sq[7]-1)*50;local dv=Bx[yv];for aN=1,Sq[0x4]do(dv)[Iv+aN]=Bx[yv+aN];end;else(Bx)[Sq[0X00005]]=Sq[0X001];end;end;else do bx=Sq[0x4];end;end;else do if Yq==0XB then Bx[Sq[0X5]]={g({},0X1,Sq[4])};else do(Bx)[Sq[5]]=u(Bx[Sq[0x00004]],Bx[Sq[0x7]]);end;end;end;end;end;else if Yq>=5 then if Yq<7 then if Yq==0x0006 then local f1=Sq[5];Bx[f1]=Bx[f1](g(Bx,f1+1,Cx));do Cx=f1;end;else if not(not Bx[Sq[0X5]])then else do bx=Sq[4];end;end;end;else if Yq>=8 then do if Yq==9 then local U_=(Sq[0X4]);local f_=(Sq[0x5]);if U_~=0x0 then Cx=f_+U_-0X00001;end;local a_,e_=nil,(nil);local t_=(Sq[7]);if U_~=0X1 then do a_,e_=Mg(Bx[f_](g(Bx,f_+0X00001,Cx)));end;else a_,e_=Mg(Bx[f_]());end;do if t_==1 then Cx=f_-1;else if t_~=0 then a_=f_+t_-0x2;Cx=a_+1;else do a_=a_+f_-1;end;do Cx=a_;end;end;local PI=(0);for rN=f_,a_ do PI=PI+1;Bx[rN]=e_[PI];end;end;end;else local oh=Sq[0X5];Bx[oh]=Bx[oh](Bx[oh+0x1],Bx[oh+0X0002]);Cx=oh;end;end;else Bx[Sq[5]]=Sq[1];end;end;else if not(Yq>=2)then do if Yq==1 then local QE=(Sq[0X0005]);local wE=H(function(...)W();for VS,JS,wS,jS,IS,AS,ES,iS,aS,dS in...do(W)(true,{VS,JS,wS,jS,IS,AS,ES,iS,aS,dS});end;end);(wE)(Bx[QE],Bx[QE+0X1],Bx[QE+2]);Cx=QE;Bx[QE]=wE;do bx=Sq[4];end;else local WJ=Sq[5];(Bx)[WJ]=Bx[WJ](Bx[WJ+1]);Cx=WJ;end;end;else if not(Yq<3)then if Yq==0X4 then do(Bx)[Sq[5]]=Bx[Sq[4]]-Bx[Sq[7]];end;else(Bx)[Sq[0x5]]=zx[Sq[1]];end;else(Bx)[Sq[5]]=Bx[Sq[0X4]]==Bx[Sq[0X7]];end;end;end;end;end;else if Yq<32 then if Yq>=0X00001a then if Yq>=0X001d then if Yq>=30 then if Yq~=31 then if Sq[0x7]~=219 then do repeat local Oy,Ry=S1,(Bx);do if#Oy>0 then local t4={};for Q4,F4 in w,Oy do do for cU,gU in w,F4 do if not(gU[0x1]==Ry and gU[2]>=0X0)then else local QI=gU[2];if not t4[QI]then(t4)[QI]={Ry[QI]};end;gU[1]=t4[QI];(gU)[0X2]=0X1;end;end;end;end;end;end;until true;end;local EO=Sq[5];do return false,EO,EO+Sq[0x4]-2;end;else bx=bx-1;(u1)[bx]={[4]=(Sq[4]-0X000A1),[2]=21,[0X5]=(Sq[0X5]-0Xa1)};end;else Bx[Sq[5]]=Bx[Sq[4]]~=Bx[Sq[0x00007]];end;else if Sq[0X0007]==105 then bx=bx-0X1;u1[bx]={[2]=62,[0x00005]=(Sq[0X5]-0X88),[0X00004]=(Sq[4]-136)};elseif Sq[7]~=17 then do Bx[Sq[0X05]]=not Bx[Sq[0X004]];end;else bx=bx-1;do u1[bx]={[0X4]=(Sq[4]-0Xd6),[0X5]=(Sq[0x05]-0Xd6),[0X2]=0x3f};end;end;end;else do if Yq<27 then Cx=Sq[5];(Bx)[Cx]=Bx[Cx]();else do if Yq==28 then local qQ=(Sq[5]);Bx[qQ](Bx[qQ+1],Bx[qQ+0X00002]);Cx=qQ-1;else local vu=(Sq[4]);local Pu=Bx[vu];for Uv=vu+1,Sq[0X7]do Pu=Pu..Bx[Uv];end;do Bx[Sq[0x0005]]=Pu;end;end;end;end;end;end;else do if not(Yq<0x00017)then if not(Yq<0X18)then do if Yq==0X19 then do if Sq[0X7]==114 then bx=bx-0x01;(u1)[bx]={[4]=(Sq[4]-42),[2]=83,[5]=(Sq[5]-0X002a)};else repeat local zX,WX,tX=S1,Bx,Sq[0X5];if#zX>0X0 then local v3={};for gl,Nl in w,zX do do for RO,NO in w,Nl do if NO[1]==WX and NO[2]>=tX then local oK=NO[2];if not v3[oK]then(v3)[oK]={WX[oK]};end;(NO)[0X01]=v3[oK];NO[2]=0X1;end;end;end;end;end;until true;end;end;else Bx[Sq[0X5]]=y(Bx[Sq[0x4]],Bx[Sq[7]]);end;end;else(Bx[Sq[5]])[Sq[1]]=Bx[Sq[7]];end;else if Yq~=0X16 then if Sq[7]==0X0047 then do bx=bx-1;end;(u1)[bx]={[5]=(Sq[5]-0X3),[4]=(Sq[4]-0X003),[2]=51};else repeat local gw,Fw=S1,(Bx);if#gw>0 then local bD=({});for yo,ko in w,gw do do for CY,KY in w,ko do if not(KY[1]==Fw and KY[2]>=0)then else local Zy=KY[2];if not(not bD[Zy])then else(bD)[Zy]={Fw[Zy]};end;KY[0X001]=bD[Zy];KY[2]=0X1;end;end;end;end;end;until true;return false,Sq[0x5],Cx;end;else(lg)[Sq[4]]=Bx[Sq[0x05]];end;end;end;end;else do if Yq>=0X25 then if not(Yq<40)then if Yq<0x29 then(Bx)[Sq[0x5]]=k(Bx[Sq[4]],Bx[Sq[0X7]]);else if Yq==0X2A then local bG=(Sq[0X0005]);local CG,vG=Bx[bG],(Sq[0X07]-1)*0X32;do for y8=1,Cx-bG do do CG[vG+y8]=Bx[bG+y8];end;end;end;else Bx[Sq[5]]=Bx[Sq[4]]%Sq[0x3];end;end;else if not(Yq<38)then if Yq==39 then(Bx)[Sq[5]]=Bx[Sq[4]][Sq[0X3]];else local V2,h2=Sq[0X00005],(sx-q1);if not(h2<0X0000)then else do h2=-0X001;end;end;for rI=V2,V2+h2 do(Bx)[rI]=Rx[q1+(rI-V2)+1];end;Cx=V2+h2;end;else local de=Sq[0X5];Bx[de](Bx[de+1]);Cx=de-0X1;end;end;else do if Yq>=0x22 then if not(Yq<35)then do if Yq==0X24 then do if Sq[7]~=29 then do if Bx[Sq[5]]then bx=Sq[4];end;end;else bx=bx-1;(u1)[bx]={[2]=83,[5]=(Sq[5]-0x0AC),[0x04]=(Sq[0X00004]-172)};end;end;else local NO=Sq[5];local CO,sO,mO=Bx[NO]();do if not(CO)then else do(Bx)[NO+0X1]=sO;end;(Bx)[NO+2]=mO;bx=Sq[4];end;end;end;end;else local F5=(Sq[4]);(Bx)[Sq[0X0005]]=Bx[F5]..Bx[F5+0X01];end;else if Yq==0x21 then(Bx)[Sq[5]]=Bx[Sq[0X4]]<=Bx[Sq[7]];else do if Bx[Sq[0X4]]~=Sq[0X3]then else bx=Sq[5];end;end;end;end;end;end;end;end;end;end;else do if not(Yq<0X41)then if not(Yq>=0X4C)then if Yq<70 then if not(Yq>=67)then if Yq==66 then do Bx[Sq[0X5]][Bx[Sq[4]]]=Bx[Sq[7]];end;else do repeat local tl,Ul=S1,Bx;do if not(#tl>0)then else local bl=({});for uY,kY in w,tl do for lM,aM in w,kY do if not(aM[1]==Ul and aM[0x02]>=0X0)then else local rt=(aM[2]);if not bl[rt]then bl[rt]={Ul[rt]};end;(aM)[1]=bl[rt];(aM)[2]=0X00001;end;end;end;end;end;until true;end;return true,Sq[5],1;end;else if Yq>=68 then if Yq~=0X0045 then do(Bx)[Sq[0X00005]]=lg[Sq[0X4]];end;else Bx[Sq[5]]=false;end;else do(Bx)[Sq[0X5]]=true;end;end;end;else if Yq<0X49 then if Yq>=0X47 then if Yq==0X0048 then if Bx[Sq[0x00004]]<Bx[Sq[0X7]]then bx=Sq[5];end;else do Bx[Sq[0X00005]]=Bx[Sq[0X004]][Bx[Sq[7]]];end;end;else Bx[Sq[0X5]]=#Bx[Sq[4]];end;else if not(Yq>=74)then local bG=(Sq[5]);local cG,XG=Bx[bG]();if cG then bx=Sq[4];(Bx)[bG+0X0003]=XG;end;else if Yq~=0x4b then(Bx[Sq[5]])[Sq[1]]=Sq[0X3];else local qE=(Sq[5]);local KE=H(function(...)(W)();for kx,qx in...do(W)(true,kx,qx);end;end);KE(Bx[qE],Bx[qE+0X1],Bx[qE+0X002]);Cx=qE;do Bx[qE]=KE;end;bx=Sq[4];end;end;end;end;else do if not(Yq<81)then do if Yq>=84 then if Yq>=0X55 then do if Yq==86 then do Bx[Sq[0X5]]=Bx[Sq[0X004]]^Bx[Sq[7]];end;else local SD=(Sq[0X05]);local xD=(Bx[SD+0X2]);local lD=(Bx[SD]);local pD=(Bx[SD+0X1]);(Bx)[SD]=H(function()for AJ=lD,pD,xD do W(true,AJ);end;end);bx=Sq[0X4];end;end;else if Bx[Sq[0X4]]==Bx[Sq[7]]then do bx=Sq[5];end;end;end;else if not(Yq>=0X000052)then do Bx[Sq[0X5]]=Bx[Sq[4]]+Bx[Sq[7]];end;else if Yq~=83 then(Bx)[Sq[0X5]]={};else if Sq[7]~=0X0000EE then repeat local l8,Q8=S1,Bx;if not(#l8>0)then else local Df={};for XI,qI in w,l8 do for te,Ne in w,qI do if Ne[0X1]==Q8 and Ne[2]>=0 then local s4=Ne[2];if not Df[s4]then Df[s4]={Q8[s4]};end;(Ne)[1]=Df[s4];do Ne[2]=1;end;end;end;end;end;until true;return;else bx=bx-0x01;(u1)[bx]={[2]=62,[5]=(Sq[0X05]-0XF7),[0X00004]=(Sq[4]-247)};end;end;end;end;end;else if Yq>=0X00004e then do if not(Yq>=79)then if not(not(Bx[Sq[4]]<=Bx[Sq[0X0007]]))then else bx=Sq[0x5];end;else if Yq~=0X50 then do if Sq[7]==196 then bx=bx-1;(u1)[bx]={[0X4]=(Sq[0x4]-253),[5]=(Sq[5]-253),[0X002]=0X33};else repeat local D4,d4=S1,(Bx);do if#D4>0X0 then local KX={};for BD,UD in w,D4 do for Jb,Pb in w,UD do if Pb[1]==d4 and Pb[2]>=0X0 then local GW=Pb[2];if not(not KX[GW])then else do KX[GW]={d4[GW]};end;end;Pb[1]=KX[GW];do(Pb)[2]=0X0001;end;end;end;end;end;end;until true;local nb=(Sq[0X5]);return false,nb,nb;end;end;else do Bx[Sq[5]]=Bx[Sq[0x4]]/Bx[Sq[7]];end;end;end;end;else do if Yq~=0x04D then do Bx[Sq[0X5]]=Bx[Sq[4]]<Bx[Sq[7]];end;else Cx=Sq[0x5];Bx[Cx]();Cx=Cx-1;end;end;end;end;end;end;else if Yq<54 then if not(Yq<48)then if Yq<0X33 then if Yq<0x0031 then local N6=(L1[Sq[0X4]]);local J6,a6=N6[0X9],nil;local w6=#J6;if not(w6>0)then else do a6={};end;for kE=1,w6 do local zE=J6[kE];if zE[0X1]~=0 then(a6)[kE-0X1]=w1[zE[0X2]];else a6[kE-0x1]={Bx,zE[2]};end;end;(a)(S1,a6);end;Bx[Sq[5]]=Fg(zx,N6,a6);else if Yq~=0X00032 then do if not(Bx[Sq[4]]<=Sq[3])then bx=Sq[5];end;end;else local PO=Sq[0x5];Bx[PO](g(Bx,PO+0x1,Cx));do Cx=PO-1;end;end;end;else if not(Yq>=0X34)then if Sq[7]~=54 then do(Bx)[Sq[5]]=nil;end;else do bx=bx-1;end;u1[bx]={[0X04]=(Sq[4]-229),[0X00002]=79,[0X0005]=(Sq[5]-0Xe5)};end;else if Yq==53 then Bx[Sq[0X005]]=m(Bx[Sq[0X004]]);else local s3=Bx[Sq[0x4]];local y3=(Sq[5]);(Bx)[y3+0x1]=s3;(Bx)[y3]=s3[Sq[0X3]];end;end;end;else do if Yq<45 then if Yq==0x02C then(zx)[Sq[1]]=Bx[Sq[0X5]];else do if Sq[0X7]==168 then bx=bx-1;do u1[bx]={[0X5]=(Sq[5]-0XDa),[4]=(Sq[0X00004]-0X0DA),[2]=62};end;else local Ah=(Sq[5]);do for nT=Ah,Ah+(Sq[0X04]-1)do(Bx)[nT]=Rx[q1+(nT-Ah)+1];end;end;end;end;end;else if Yq<0X00002e then do Bx[Sq[5]]=Bx[Sq[4]]*Bx[Sq[0x7]];end;else do if Yq~=47 then do Bx[Sq[0x00005]]=Bx[Sq[4]]%Bx[Sq[7]];end;else local rH,VH=Sq[0X5],Sq[4];Cx=rH+VH-1;repeat local QP,dP=S1,(Bx);if#QP>0X00000 then local U0=({});for Pz,vz in w,QP do for Zy,my in w,vz do if not(my[1]==dP and my[0x2]>=0X0)then else local zp=my[0x002];if not(not U0[zp])then else do(U0)[zp]={dP[zp]};end;end;my[1]=U0[zp];do my[0X002]=1;end;end;end;end;end;until true;do return true,rH,VH;end;end;end;end;end;end;end;else if not(Yq<59)then if not(Yq>=62)then if not(Yq<60)then if Yq==0x00003d then local Wr=(Sq[5]);do Cx=Wr+Sq[4]-1;end;Bx[Wr](g(Bx,Wr+0X1,Cx));Cx=Wr-1;else for yG=Sq[5],Sq[4]do Bx[yG]=nil;end;end;else local GH=(w1[Sq[4]]);(Bx)[Sq[0X5]]=GH[1][GH[0X2]];end;else if not(Yq>=63)then(Bx)[Sq[0X00005]]=Bx[Sq[4]];else if Yq~=64 then if Sq[0X07]~=245 then Bx[Sq[5]]=-Bx[Sq[4]];else bx=bx-1;u1[bx]={[0X4]=(Sq[0X00004]-186),[0X2]=70,[0x0005]=(Sq[5]-0x0BA)};end;else do if Bx[Sq[4]]~=Bx[Sq[7]]then bx=Sq[5];end;end;end;end;end;else if Yq>=0X038 then if not(Yq>=0X39)then local Yz=(Bx[Sq[4]]/Bx[Sq[7]]);(Bx)[Sq[5]]=Yz-Yz%0X00001;else if Yq~=0X03a then if not(Bx[Sq[0X00004]]<Bx[Sq[7]])then bx=Sq[5];end;else Bx[Sq[5]]=Bx[Sq[4]]>Bx[Sq[7]];end;end;else if Yq==55 then(Bx)[Sq[0X5]]=Bx[Sq[0X4]]~=Sq[0X3];else repeat local A7,o7=S1,(Bx);if#A7>0X00 then local k4={};for zw,pw in w,A7 do do for ev,pv in w,pw do do if not(pv[1]==o7 and pv[0X002]>=0x0)then else local z4=(pv[2]);if not k4[z4]then k4[z4]={o7[z4]};end;pv[1]=k4[z4];do pv[2]=1;end;end;end;end;end;end;end;until true;do return true,Sq[0X5],0;end;end;end;end;end;end;end;end;end;end;end);if Px then if Mx then if Xx==1 then return Bx[mx]();else return Bx[mx](g(Bx,mx+0X01,Cx));end;elseif not(mx)then else return g(Bx,mx,Xx);end;else if Z(Mx)=="\115tri\110g"then if not(q(Mx,"\097t\116\101m\112\116 t\111\032\121\105e\108\100 \097cross\032m\101tame\116h\111d\047\067%\045c\097l\108 b\111\117nd\097r\121"))then else return coroutine.yield();end;if q(Mx,"^.\045\058\037d\043: ")then(F)("L\117\114\097\112h\032Script:"..(g1[bx-0X1]or"(\105n\116e\114n\097l\041").."\058 "..l(Mx),0x00);else(F)(Mx,0x0);end;else F(Mx,0);end;end;end;if not(t)then else t(d1,o1);end;return d1;end;JZ=0X3;else sg=Kg();do JZ=0X4;end;end;else do if JZ==0X002 then return Fg(X,sg,nil)(...);else function Kg()local N1=({});local L1,C1=1,(nil);local D1={Vg,nil,nil,{},{},nil,{},Vg,Vg};do repeat if L1<=0X0 then(D1)[1]=i();L1=0X00002;else if L1~=0X0001 then D1[0x00003]=i();L1=0X00003;else C1={};do L1=0;end;end;end;until L1>2;end;L1=0X3;local O1=nil;while L1<0X5 do if L1<=0X1 then if L1~=0 then do(D1)[15]=G();end;do L1=0X00;end;else O1=G();L1=0X004;end;else do if L1<=0X2 then D1[0x0008]=i();do L1=0X1;end;else if L1==0X3 then D1[10]=G();L1=2;else(D1)[0X2]=d(O1,1,0X1)~=0X00;do L1=5;end;end;end;end;end;end;local a1=(nil);do for IG=0X0,4 do do if IG<=0x1 then if IG==0X0 then D1[0X06]=d(O1,2,0X1)~=0;else a1={};end;else if IG<=0X2 then(D1)[0X9]=a1;else if IG==3 then for qk=1,i()do a1[qk]={G(),i()};end;else D1[0xf]=G();end;end;end;end;end;end;do L1=1;end;local p1,J1=nil,nil;do while(true)do if L1==0X0000 then do J1=0X1;end;do break;end;else p1=B()-0X0Db30;L1=0;end;end;end;L1=0X1;local M1,u1=nil,nil;while(true)do if L1==0x0 then u1=G()~=0x0;break;else M1=G();L1=0X0;end;end;for Cy=0X1,p1 do local xy=(4);local Xy,py,ly=nil,nil,(nil);while xy<7 do do if xy<=0x2 then if not(xy<=0)then do if xy==1 then py=Vg;xy=0X00000;else ly={py,{}};xy=5;end;end;else N1[Cy-1]=J1;xy=0X6;end;else if xy<=4 then do if xy==3 then J1=J1+0X00001;xy=7;else Xy=G();xy=0x1;end;end;else do if xy==0X5 then(C1)[J1]=ly;xy=0X3;else if Xy==128 then do py=z();end;elseif Xy==189 then py=K(Yg(M1),6);elseif Xy==19 then do py=Ng;end;elseif Xy==253 then py=z()+B();elseif Xy==69 then py=K(Yg(M1),15);elseif Xy==64 then py=K(Yg(M1),15);elseif Xy==0x00e2 then py=K(Yg(M1),z()+B());elseif Xy==248 then py=I();elseif Xy==132 then py=true;elseif Xy==86 then py=z();elseif Xy~=rg then else do py=K(Yg(M1),G());end;end;xy=0X2;end;end;end;end;end;end;if not(u1)then else Qg[Zg]=ly;Zg=Zg+0X00001;end;end;(D1)[hg]=G();local i1=(B());do for zz=0X1,i1 do local Iz,pz,oz,tz=0X3,nil,nil,nil;while Iz<4 do if not(Iz<=0X1)then if Iz~=2 then pz=B();Iz=2;else oz=B();Iz=0;end;else do if Iz==0 then tz=B();Iz=1;else do for zI=pz,oz do D1[7][zI]=tz;end;end;Iz=0X4;end;end;end;end;end;end;do D1[0xB]=B();end;local T1=(B()-0x000016fB);local X1=(D1[5]);for jk=1,T1 do do X1[jk]={[0X5]=N(),[0X6]=G(),[3]=G(),[0X00004]=N(),[0X2]=i(),[1]=G(),[0X7]=N()};end;end;local g1,v1=nil,nil;for Ky=0,4 do if not(Ky<=0X001)then if Ky<=2 then v1=B()-0X000f004;else do if Ky==3 then do for aV=0,v1-1 do do(g1)[aV]=Kg();end;end;end;else return D1;end;end;end;else if Ky==0 then for mM=0x00001,T1 do local tM=(nil);for Fa=0,1 do do if Fa~=0 then for Hl,Nl in nZ(E)do local Pl,rl=nil,nil;for gi=0X00000,0X2 do if gi<=0 then Pl=D[Nl];else if gi==0x1 then rl=tM[Pl];else if rl==1 then local iy,Gy,Zy=0X2,nil,(nil);repeat if not(iy<=0X0)then if iy==1 then Zy=C1[Gy];do iy=0;end;else Gy=N1[tM[Nl]];iy=1;end;else if not(Zy)then else local G4=0X01;local j4=(nil);while G4~=0X0003 do if not(G4<=0X0)then if G4==1 then do(tM)[Pl]=Zy[1];end;G4=0X0;else(j4)[#j4+1]={tM,Pl};do G4=3;end;end;else j4=Zy[2];G4=0X00002;end;end;end;iy=0X03;end;until iy>0X0002;elseif rl~=0xC then else(tM)[Nl]=mM+tM[Nl]+0X1;end;end;end;end;end;else tM=D1[5][mM];end;end;end;end;else do g1=D1[0X4];end;end;end;end;end;do JZ=1;end;end;end;end;until false;end)(0X3fF,string.char,12,0X2,0x00003,"\114\115\104\105\102\116",8,'\098xo\114',nil,0X9,0X1,setfenv,coroutine.wrap,unpack,0x48,next,'\098\097nd',0X0004,table.unpack,16777216,0X00000,setmetatable,11,string,ipairs,0XD,error,getfenv,string.gsub,type,_ENV,0X000A,14,assert,false,rawset,string.rep,0X87,15,tostring,coroutine.yield,5,table.insert,...);
